heat_template_version: 2018-03-02
description: Template to spawn an cirros instance.

parameters:
  node_count:
    type: number
    description: Number of node servers to create.
    default: 1

  image:
    description: The Glance image to use as a base
    type: string
    default: rhel-server-7.6-x86_64-kvm

  master_flavor:
    description: The name of the OpenStack instance flavor to use for master servers
    type: string

  master_hostname:
    description: The default prefix for master server hostnames
    type: string
    default: "master"

  key_name:
    type: string
    description: keypair to be used
    default: kubernetes-keypair

  service_network:
    type: string
    description: project network to attach instance to

  external_network:
    type: string
    description: network used for floating IPs
resources:
  server:
    type: OS::Nova::Server
    properties:
      name: { get_param: master_hostname }
      config_drive: true
      block_device_mapping:
        - device_name: vda
          delete_on_termination: true
          volume_id: { get_resource: volume }
      flavor: {get_param: master_flavor}
      key_name: {get_param: key_name}
      networks:
        - port: { get_resource: port }
      user_data_format: RAW
      user_data: |
        #!/bin/sh
        pvcreate /dev/vdb
        vgcreate docker-volume-group /dev/vdb
        lvcreate -n lv-docker -L 50G docker-volume-group
        mkfs.xfs /dev/docker-volume-group/lv-docker
        echo "###------------Related to LVM Docker----------------------###" >> /etc/fstab
        echo "/dev/docker-volume-group/lv-docker    /var/lib/docker     xfs     defaults    0 0" >> /etc/fstab
        echo "###--------------------END--------------------------------###" >> /etc/fstab
        mount -a

  port:
    type: OS::Neutron::Port
    properties:
      network: {get_param: service_network}
      security_groups:
        - default

  floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network_id: {get_param: external_network}
      port_id: { get_resource: port }

  volume:
    type: OS::Cinder::Volume
    properties:
      image: {get_param: image}
      size: 30

  docker_volume:
    type: OS::Cinder::Volume
    properties:
      size: 200
      availability_zone: nova

  volume_attachment:
    type: OS::Cinder::VolumeAttachment
    properties:
      volume_id: { get_resource: docker_volume }
      instance_uuid: { get_resource: server }
      mountpoint: /dev/vdb


outputs:
  ip_address:
    description: Floating IP address of server in public network
    value: { get_attr: [floating_ip, floating_ip_address ] }
